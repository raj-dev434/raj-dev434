---BINARY SEARCH---
class Main{
    public static void main(String[]args){
        int[]nums={1,2,3,4,5,6};
        int target=6;
        System.out.print(binarysearch(nums,target));
    }
    static int binarysearch(int[]nums,int target){
        int left=0;
        int right=nums.length-1;
        while(left<=right){
            int mid =left+(right-left)/2;
            if(mid==target){
                return mid;
            }
            else if(mid<target){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return -1;
    }
}

------------------------------------------------------------------------
---FIRST AND LAST OCCURENCE---
import java.util.*;
class Main{
    public static void main(String[]args){
        int nums[]={1,2,3,3,4,5};
        int target=3;
        System.out.print(Arrays.toString(searchrange(nums,target)));
    }
    public static int[] searchrange(int[]nums,int target){
        int left= leftmost(nums,target);
        int right=rightmost(nums,target);
        return new int[]{left,right};
    }
    static private int leftmost(int[]nums,int target){
        int left=0;
        int right=nums.length-1;
        int result=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target){
                result=mid;
                right=mid-1;
            }
            else if(nums[mid]<target){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return result;
    }
    static private int rightmost(int[]nums,int target){
        int left=0;
        int right=nums.length-1;
        int result=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target){
                result = mid;
                left=mid+1;
            }
            else if(nums[mid]<target){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return result;
    }
}
----------------------------------------------------------------------------------







